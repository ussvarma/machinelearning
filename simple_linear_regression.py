# -*- coding: utf-8 -*-
"""simple_linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GQDemJ6EwLo9LJQBddaKKMKkoCXlaVDy

# Simple Linear Regression
    which aims to predict continuous outputs

##Assumptions of a linear regression :
  1.Linearity

  2.Homoscedasticity   #assumption of equal or similar variance in different
                              groups being compared

  3.Multivariate normality

  4.Independence of errors

  5.Lack of multicollinearity  #independent variables not highly correlated

## Importing the libraries
"""

import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv("datasets/Salary_Data.csv")
x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

print(x)

print(y)

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=1)

"""## Training the Simple Linear Regression model on the Training set"""

from sklearn.linear_model import LinearRegression

lr = LinearRegression()
lr.fit(x_train, y_train)

"""## Predicting the Test set results"""

y_pred = lr.predict(x_test)
print(y_pred)
"""## Visualising the Training set results"""

plt.scatter(x_train, y_train, color="red")
plt.plot(x_train, lr.predict(x_train), color='blue')
plt.title('salary vs experience (Training set)')
plt.xlabel('years of experience')
plt.ylabel('salary')
plt.show()

"""## Visualising the Test set results"""

plt.scatter(x_test, y_test, color='red')
plt.plot(x_train, lr.predict(x_train), color="blue")
plt.title('salary vs experience(test set)')
plt.xlabel('years of experience')
plt.ylabel('salary')
plt.show()

"""##finding the coefficients and intercepts"""

print(lr.coef_)
print(lr.intercept_)

"""#Second dataset of simple linear regression model

##data importing
"""

dataset2 = pd.read_csv("datasets/height_weight_data.csv")
dataset2=dataset2.drop(["Gender"],axis=1)
x2 = dataset2.iloc[:, :-1].values
y2 = dataset2.iloc[:, -1].values

"""##Spliting the dataset into train and test dataset"""

from sklearn.model_selection import train_test_split

x2_train, x2_test, y2_train, y2_test = train_test_split(x2, y2, test_size=0.2, random_state=1)

"""##Training the linear regression model"""

from sklearn.linear_model import LinearRegression

lr2 = LinearRegression()
lr2.fit(x2_train, y2_train)

"""##predicting the results"""

y2_predict = lr2.predict(x2_test)

"""##visualizing the training test results"""

plt.scatter(x2_train, y2_train, color="red")
plt.plot(x2_train, lr2.predict(x2_train), color="blue")
plt.title("height vs weight (training set)")
plt.xlabel("x2_train")
plt.ylabel("y2_train")
plt.show()

"""##visualizing the testset results"""

plt.scatter(x2_test, y2_test, color="red")
plt.plot(x2_train, lr2.predict(x2_train), color="blue")
plt.title("heights vs weights (test set)")
plt.xlabel("x2_test")
plt.ylabel("y2_test")
plt.show()
