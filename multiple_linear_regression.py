# -*- coding: utf-8 -*-
"""multiple_linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cP_grSlM_JtBWJXtlwDqdKVrby2vIEGl

# Multiple Linear Regression

## Importing the libraries
"""

import numpy as np
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv("datasets/50_Startups.csv")
x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

print(x)

dataset.isna().sum()

"""Observation:

1.No missing values
"""

print(y)

"""## Encoding categorical data"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [3])], remainder="passthrough")
x = ct.fit_transform(x)

print(x)

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)

"""## Training the Multiple Linear Regression model on the Training set"""

from sklearn.linear_model import LinearRegression

regressor = LinearRegression()
regressor.fit(x_train, y_train)

"""## Predicting the Test set results"""

y_pred = regressor.predict(x_test)
np.set_printoptions(precision=2)
comparison_matrix = np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_pred), 1)), 1)
print(comparison_matrix)

"""#Making a single prediction with dependable variables 
R & D Spend=160000,Administration Spend=130000, marketing spend=300000 and state='California'
"""

print(regressor.predict([[1, 0, 0, 160000, 130000, 300000]]))

"""#Finding the coefficients of linear regression and intercept"""

print(regressor.coef_, regressor.intercept_)
