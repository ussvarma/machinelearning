# -*- coding: utf-8 -*-
"""logistic_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_WaOSR5jGdKw8RcXBs9EiqzocJNdiIj4

# Logistic Regression

## Importing the libraries
"""

import numpy as np
import pandas as pd

"""## Importing the dataset"""

dataset=pd.read_csv("datasets/Social_Network_Ads.csv")
x=dataset.iloc[:,:-1].values
y=dataset.iloc[:,-1].values

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=0)


"""## Feature Scaling"""

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.fit_transform(x_test)


"""## Training the Logistic Regression model on the Training set"""

from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression()
classifier.fit(x_train,y_train)

"""## Predicting a new result"""

print(classifier.predict(sc.transform([[30,87000]])))

"""## Predicting the Test set results"""

y_pred=classifier.predict(x_test)
print(np.concatenate((y_pred.reshape(-1,1),y_test.reshape(-1,1)),1))

"""## Making the Confusion Matrix"""

from sklearn.metrics import confusion_matrix,accuracy_score
print(confusion_matrix(y_test,y_pred))
print(accuracy_score(y_test,y_pred))

